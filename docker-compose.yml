version: '3.8'

services:
  database:
    image: postgres:15-alpine
    container_name: storypublisher-db
    environment:
      POSTGRES_DB: storypublisher
      POSTGRES_USER: storypublisher
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U storypublisher"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: storypublisher-backend
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://database:5432/storypublisher
      - SPRING_DATASOURCE_USERNAME=storypublisher
      - SPRING_DATASOURCE_PASSWORD=password
      - APP_JWT_SECRET=StoryPublisherSecretKeyForJWTTokenGenerationAndValidation2025
      - APP_CORS_ALLOWED_ORIGINS=http://localhost:3000,http://frontend:3000
    ports:
      - "8080:8080"
    depends_on:
      database:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: storypublisher-frontend
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8080/api
    ports:
      - "3000:3000"
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
